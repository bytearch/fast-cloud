spring:
  shardingsphere:
    ## 数据源配置
       datasource:
         names: order-db1,order-db2,order-db3,order-db4
         order-db1:
           type: com.alibaba.druid.pool.DruidDataSource
           driver-class-name: com.mysql.cj.jdbc.Driver
           url: jdbc:mysql://172.30.1.2:3306/order_db_1?useUnicode=true&characterEncoding=utf8&autoReconnect=true&rewriteBatchedState&connectTimeout=1000&socketTimeout=5000&useSSL=false&nullNamePatternMatchesAll=true
           username: root
           password: root
         order-db2:
           type: com.alibaba.druid.pool.DruidDataSource
           driver-class-name: com.mysql.cj.jdbc.Driver
           url: jdbc:mysql://172.30.1.2:3306/order_db_2?useUnicode=true&characterEncoding=utf8&autoReconnect=true&rewriteBatchedState&connectTimeout=1000&socketTimeout=5000&useSSL=false&nullNamePatternMatchesAll=true
           username: root
           password: root
         order-db3:
           type: com.alibaba.druid.pool.DruidDataSource
           driver-class-name: com.mysql.cj.jdbc.Driver
           url: jdbc:mysql://172.30.1.2:3306/order_db_3?useUnicode=true&characterEncoding=utf8&autoReconnect=true&rewriteBatchedState&connectTimeout=1000&socketTimeout=5000&useSSL=false&nullNamePatternMatchesAll=true
           username: root
           password: root
         order-db4:
             type: com.alibaba.druid.pool.DruidDataSource
             driver-class-name: com.mysql.cj.jdbc.Driver
             url: jdbc:mysql://172.30.1.2:3306/order_db_4?useUnicode=true&characterEncoding=utf8&autoReconnect=true&rewriteBatchedState&connectTimeout=1000&socketTimeout=5000&useSSL=false&nullNamePatternMatchesAll=true
             username: root
             password: root
  #### 配置分库分表策略
       sharding:
         tables:
           order:
             actual-data-nodes: order-db3.order_$->{128..255}
             database-strategy:
               standard:
                 ## 分片键
                 sharding-column: user_id
                 precise-algorithm-class-name: com.bytearch.sharding.jdbc.mysql.demo.shardingAlgorithm.OrderDBPreciseShardingAlgorithm
             table-strategy:
               standard:
                 sharding-column: user_id
                 precise-algorithm-class-name: com.bytearch.sharding.jdbc.mysql.demo.shardingAlgorithm.OrderTablePreciseShardingAlgorithm
            # key-generator:
            #    type: GeneID
            #    column: order_id
          # 默认数据源，未分片的表默认执行库
         default-data-source-name: order-db1
       props:
         sql.show: true
#分布式ID生成器配置
id-generator:
  serverLists: 172.30.1.6:2181,172.30.1.7:2181,172.30.1.8:2181
  namespace: demo_generator
  workersBackUpFile: ./id_worker.json
  workersBackUpInterval: 10
  minWorkerID: 1
  maxWorkerID: 64
